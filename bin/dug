#############################################################
##
## Dug is a semantic search pipeline framework including
##
##   Ingest:
##
##     link: Annotate a data set with ontology identifiers
##           based on NLP and other tagging mechanisms.
##       usage: bin/dug link <metadata>
##
##     load: Turn the data into a knowledge graph into a
##           graph and add insert it into a database. 
##       usage: bin/dug load <metadata>_tagged.json
##
##   Crawl & Index:
##
##     crawl: Execute graph queries against an aggregator.
##            Record the knowledge graphs in a cache.
##       usage: bin/dug crawl
##
##     index: Analyze the graph to build a search index.
##       usage: bin/dug index
##
##     query: Query the search engine from the command line
##       usage: bin/dug query <text>
##
##   Search:
##
##     api: Provides a REST API to the search engine.
##       bin/dug api [--debug] [--port=<int>]
##
#############################################################
#!/bin/bash

# Configure the PYTHONPATH
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
SEARCH_ROOT=$( dirname $DIR )
export PYTHONPATH=$SEARCH_ROOT:$SEARCH_ROOT/kgx

# Ensure the KGX library is installed
if [ ! -d $SEARCH_ROOT/kgx ]; then
    git clone https://github.com/NCATS-Tangerine/kgx.git $SEARCH_ROOT/kgx
fi

### INGEST:

#############################################################
##
## Link: Generate linked data information from raw metadata.
##
#############################################################
link () {
    python -m dug.ingest --annotate $*
}

#############################################################
##
## Load: Create a knowledge graph in a graph database.
##
#############################################################
load () {
    python -m dug.ingest --load $input $*
}

### Crawl/Index

#############################################################
##
## Crawl: Gather knowledge graphs via queries.
##
#############################################################
crawl () {
    curdir=$PWD
    cd $SEARCH_ROOT/dug
    python -m dug.core --crawl $*
    cd $curdir
}

#############################################################
##
## Index: Create indices and add to search engine.
##
#############################################################
index () {
    curdir=$PWD
    cd $SEARCH_ROOT/dug
    python -m dug.core --index $*
    cd $curdir
}

#############################################################
##
## Query: Test the created index with a query.
##
#############################################################
query () {
    python -m dug.core --query $*
}

#############################################################
##
## Query: Test the created index with a query.
##
#############################################################
api () {
    python -m dug.api $*
}

$*

exit 0
