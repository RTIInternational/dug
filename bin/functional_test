#!/bin/bash

###########################################################################
##
## Dug Functional Test
##
##   Clones a Dug GitHub repository
##   Starts the Dug stack.
##   Waits for the stack to become available
##   Executes tests
##   Shuts down the stack
##
##   Prerequisites:
##     Tested with docker-compose version 1.25.2, build 698e2846
##
###########################################################################
set -e
set -x

TEST_DIR=$PWD/test_dir
DUG_TEST_DIR=$TEST_DIR/dug
DUG_TEST_ENV_FILE=$DUG_TEST_DIR/docker/.env

wait_for_elastic () {

    host=$1
    source $DUG_TEST_ENV_FILE
    # elastic basic auth
    ELASTIC_AUTH=${ELASTIC_USERNAME}:${ELASTIC_PASSWORD}

    until $(curl -u "$ELASTIC_AUTH" --output /dev/null --silent --head --fail "$host"); do
        printf '.'
        sleep 1
    done
    
    # First wait for ES to start...
    response=$(curl -u "$ELASTIC_AUTH" --write-out %{http_code} --silent --output /dev/null "$host")
    
    until [ "$response" = "200" ]; do
        response=$(curl -u "$ELASTIC_AUTH" --write-out %{http_code} --silent --output /dev/null "$host")
        >&2 echo "  -- Elastic Search is unavailable - sleeping"
        sleep 3
    done
    
    # next wait for ES status to turn to Green
    health="$(curl -u "$ELASTIC_AUTH" -fsSL "$host/_cat/health?h=status")"
    echo "health: $health"
    until [[ "$health" == *green* ]]; do
        echo health $health
        health=$(curl -u "$ELASTIC_AUTH" -fsSL "$host/_cat/health?h=status")
        >&2 echo "  -- Elastic Search is unavailable - sleeping"
        sleep 3
    done

    >&2 echo "Elastic Search is up"
}

execute_test () {
    # Create a fresh test environment.
    rm -rf $TEST_DIR
    mkdir -p $TEST_DIR
    cd $TEST_DIR
    
    # Get the  latest source.
    git clone git@github.com:helxplatform/dug.git
    cd dug
    
    # Configure volume dirs and set read and write
    mkdir -p -m666 $TEST_DIR/dug/db/elastic
    mkdir -p -m666 $TEST_DIR/dug/db/redis
    mkdir -p -m666 $TEST_DIR/dug/db/neo4j
    
    # Configure a fresh Python3 virtual environment.
    python3 -m venv venv
    source venv/bin/activate
    pip install -r requirements.txt
    
    # Start all services. detach to avoid container logs here
    bin/dug stack up -d
    
    # Wait for service availability.
    wait_for_elastic localhost:9200
    
    # Execute tests.
    bin/dug test
    
    # Shut down all services.
    bin/dug stack down
}

execute_test

exit 0


