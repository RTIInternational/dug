apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: {{ .Values.dug.elasticsearch.app_name }}
  name: {{ .Values.dug.elasticsearch.statefulset_name }}
spec:
  serviceName: {{ .Values.dug.elasticsearch.service_name }}
  replicas: {{ .Values.dug.elasticsearch.replica_count }}
  selector:
    matchLabels:
      app: {{ .Values.dug.elasticsearch.app_name }}
  template:
    metadata:
      labels:
        app: {{ .Values.dug.elasticsearch.app_name }}
    spec:
      initContainers:
        - name: sysctl
          image: bitnami/minideb:buster
          imagePullPolicy: Always
          command:
            - /scripts/sysctl.sh
          securityContext:
            privileged: true
          volumeMounts:
            - name: elasticsearch-initcontainer-volume
              mountPath: /scripts/sysctl.sh
              subPath: sysctl.sh
      volumes:
        - name: elasticsearch-initcontainer-volume
          configMap:
            name: {{ .Values.dug.elasticsearch.init_config_name }}
            defaultMode: 0755
        - name: elasticsearch-certs
          secret:
            secretName: elastic-certificates
      containers:
      - image: {{ .Values.dug.elasticsearch.image }}:{{ .Values.dug.elasticsearch.image_tag }}
        name: {{ .Values.dug.elasticsearch.app_name }}-container
        ports:
          - containerPort: {{ .Values.dug.elasticsearch.rest_port }}
          - containerPort: {{ .Values.dug.elasticsearch.nodes_com_port }}
        livenessProbe:
          tcpSocket:
            port: {{ .Values.dug.elasticsearch.nodes_com_port }}
          initialDelaySeconds: 30
          periodSeconds: 10
        volumeMounts:
        - name: elasticsearch-data
          mountPath: /usr/share/elasticsearch/data
        - name: elasticsearch-certs
          readOnly: true
          mountPath: /usr/share/elasticsearch/config/certificates
        env:
        - name: ELASTIC_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.dug.secrets.name }}
              key: ELASTIC_PASSWORD
        - name: ES_JAVA_OPTS
          value: "-Xms{{ .Values.dug.elasticsearch.xms }} -Xmx{{ .Values.dug.elasticsearch.xmx }}"
        - name: xpack.security.enabled
          value: 'true'
        - name: xpack.security.transport.ssl.enabled
          value: 'true'
        - name: xpack.security.transport.ssl.verification_mode
          value: 'certificate'
        - name: xpack.security.transport.ssl.keystore.path
          value: /usr/share/elasticsearch/config/certificates/elastic-certificates.p12
        - name: xpack.security.transport.ssl.truststore.path
          value: /usr/share/elasticsearch/config/certificates/elastic-certificates.p12
        - name: cluster.name
          value: {{ .Values.dug.elasticsearch.cluster_name }}
        - name: node.name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: cluster.initial_master_nodes
          value: {{ .Values.dug.elasticsearch.initial_master_name }}
        - name: discovery.seed_hosts
          value: {{ .Values.dug.elasticsearch.service_name }}
        - name: network.host
          value: "0.0.0.0"
        {{- range $role, $enabled := .Values.dug.elasticsearch.roles }}
        - name: node.{{ $role }}
          value: "{{ $enabled }}"
        {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: elasticsearch-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ .Values.dug.elasticsearch.storage_class }}
      resources:
        requests:
          storage: {{ .Values.dug.elasticsearch.storage_size }}
